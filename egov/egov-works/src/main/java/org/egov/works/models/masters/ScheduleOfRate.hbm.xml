<?xml version="1.0"?>
<!--
  ~    eGov  SmartCity eGovernance suite aims to improve the internal efficiency,transparency,
  ~    accountability and the service delivery of the government  organizations.
  ~
  ~     Copyright (C) 2017  eGovernments Foundation
  ~
  ~     The updated version of eGov suite of products as by eGovernments Foundation
  ~     is available at http://www.egovernments.org
  ~
  ~     This program is free software: you can redistribute it and/or modify
  ~     it under the terms of the GNU General Public License as published by
  ~     the Free Software Foundation, either version 3 of the License, or
  ~     any later version.
  ~
  ~     This program is distributed in the hope that it will be useful,
  ~     but WITHOUT ANY WARRANTY; without even the implied warranty of
  ~     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  ~     GNU General Public License for more details.
  ~
  ~     You should have received a copy of the GNU General Public License
  ~     along with this program. If not, see http://www.gnu.org/licenses/ or
  ~     http://www.gnu.org/licenses/gpl.html .
  ~
  ~     In addition to the terms of the GPL license to be adhered to in using this
  ~     program, the following additional terms are to be complied with:
  ~
  ~         1) All versions of this program, verbatim or modified must carry this
  ~            Legal Notice.
  ~            Further, all user interfaces, including but not limited to citizen facing interfaces,
  ~            Urban Local Bodies interfaces, dashboards, mobile applications, of the program and any
  ~            derived works should carry eGovernments Foundation logo on the top right corner.
  ~
  ~            For the logo, please refer http://egovernments.org/html/logo/egov_logo.png.
  ~            For any further queries on attribution, including queries on brand guidelines,
  ~            please contact contact@egovernments.org
  ~
  ~         2) Any misrepresentation of the origin of the material is prohibited. It
  ~            is required that all modified versions of this material be marked in
  ~            reasonable ways as different from the original version.
  ~
  ~         3) This license does not grant any rights to any user of the program
  ~            with regards to rights under trademark law for use of the trade names
  ~            or trademarks of eGovernments Foundation.
  ~
  ~   In case of any queries, you can reach eGovernments Foundation at contact@egovernments.org.
  ~
  -->
<!DOCTYPE hibernate-mapping
PUBLIC "-//Hibernate/Hibernate Mapping DTD 3.0//EN"
"http://www.hibernate.org/dtd/hibernate-mapping-3.0.dtd">
<hibernate-mapping>
<class name="org.egov.works.models.masters.ScheduleOfRate" table="EGW_SCHEDULEOFRATE">
		<id name="id" column="ID" type="long" unsaved-value="null">
			<generator class="org.hibernate.id.enhanced.SequenceStyleGenerator">
				<param name="sequence_name">SEQ_EGW_SCHEDULEOFRATE</param>
			</generator>
		</id>		
		
   		<property name="code" column="CODE" type="string" not-null="true" unique="true" />  
   		<property name="description" column="DESCRIPTION" type="string" not-null="true" />   
   		<many-to-one name="scheduleCategory" class="org.egov.works.models.masters.ScheduleCategory" fetch="select" >
            <column name="SOR_CATEGORY_ID" precision="22" scale="0" not-null="true" />
    	</many-to-one>
    	<many-to-one name="uom" class="org.egov.common.entity.UOM" fetch="select" >
            <column name="UOM_ID" precision="22" scale="0" not-null="true" />
    	</many-to-one>
    
    	<many-to-one name="createdBy" class="org.egov.infra.admin.master.entity.User" column="CREATED_BY" fetch="select" not-null="true" />
		<many-to-one name="modifiedBy" class="org.egov.infra.admin.master.entity.User" column="MODIFIED_BY" fetch="select"/>
		<property name="createdDate" column="CREATED_DATE" type="timestamp" not-null="true" />
		<property name="modifiedDate" column="MODIFIED_DATE" type="timestamp" />
		
	    <list name="sorRates" cascade="all,delete-orphan">
	    	<key column="SCHEDULEOFRATE_ID"  not-null="true" />
	    	<list-index column="MY_SOR_INDEX"/>
	    	<one-to-many class="org.egov.works.models.masters.SORRate" />	
	    </list>
	      
	    <list name="marketRates" cascade="all,delete-orphan">
	    	<key column="SCHEDULEOFRATE_ID"  not-null="true" />
	    	<list-index column="MARKET_SOR_INDEX"/>
	    	<one-to-many class="org.egov.works.models.masters.MarketRate" />	
	    </list>
</class>
<query name="SCHEDULEOFRATES_BY_IDS">
		<![CDATA[
     	from ScheduleOfRate where id in(:param_0)   
    ]]>
</query>

<query name="SCHEDULEOFRATES_SEARCH">
		<![CDATA[
     	from ScheduleOfRate as sch inner join fetch sch.sorRates as rates where (sch.code like concat ('%', ?, '%')
     	 or sch.description like concat ('%', ?, '%')) and sch.scheduleCategory.id=?  and  ((? between rates.validity.startDate and rates.validity.endDate ) 
         or (rates.validity.startDate<=? and rates.validity.endDate is null))   
    ]]>
</query>

<query name="SCHEDULEOFRATES_SEARCH_ESTIMATETEMPLATE">
		<![CDATA[
     	from ScheduleOfRate as sch where (sch.code like concat ('%', ?, '%')
     	 or sch.description like concat ('%', ?, '%')) and sch.scheduleCategory.id=?    
    ]]>
</query>

<query name="SCHEDULEOFRATES_SEARCH_REVISIONESTIMATE">
		<![CDATA[
     	from ScheduleOfRate as sch inner join fetch sch.sorRates as rates where (sch.code like concat ('%', ?, '%')
     	 or sch.description like concat ('%', ?, '%')) and sch.scheduleCategory.id=?  and  ((? between rates.validity.startDate and rates.validity.endDate ) 
         or (rates.validity.startDate<=? and rates.validity.endDate is null)) and sch.id not in(select act.schedule.id from Activity act
         where (act.abstractEstimate.id=? and act.schedule is not null)) 
         and sch.id not in(select act2.schedule.id from Activity act2
         where ((act2.abstractEstimate.parent is not null and act2.abstractEstimate.parent.id=? and act2.abstractEstimate.parent.egwStatus is not null and act2.abstractEstimate.parent.egwStatus.code!='CANCELLED' 
         and act2.abstractEstimate.egwStatus.code not in ('CANCELLED','REJECTED'))) and act2.schedule is not null)  
    ]]>
</query>

</hibernate-mapping>
