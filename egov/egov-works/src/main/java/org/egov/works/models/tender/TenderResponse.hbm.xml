<?xml version="1.0"?>
<!--
  ~    eGov  SmartCity eGovernance suite aims to improve the internal efficiency,transparency,
  ~    accountability and the service delivery of the government  organizations.
  ~
  ~     Copyright (C) 2017  eGovernments Foundation
  ~
  ~     The updated version of eGov suite of products as by eGovernments Foundation
  ~     is available at http://www.egovernments.org
  ~
  ~     This program is free software: you can redistribute it and/or modify
  ~     it under the terms of the GNU General Public License as published by
  ~     the Free Software Foundation, either version 3 of the License, or
  ~     any later version.
  ~
  ~     This program is distributed in the hope that it will be useful,
  ~     but WITHOUT ANY WARRANTY; without even the implied warranty of
  ~     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  ~     GNU General Public License for more details.
  ~
  ~     You should have received a copy of the GNU General Public License
  ~     along with this program. If not, see http://www.gnu.org/licenses/ or
  ~     http://www.gnu.org/licenses/gpl.html .
  ~
  ~     In addition to the terms of the GPL license to be adhered to in using this
  ~     program, the following additional terms are to be complied with:
  ~
  ~         1) All versions of this program, verbatim or modified must carry this
  ~            Legal Notice.
  ~            Further, all user interfaces, including but not limited to citizen facing interfaces,
  ~            Urban Local Bodies interfaces, dashboards, mobile applications, of the program and any
  ~            derived works should carry eGovernments Foundation logo on the top right corner.
  ~
  ~            For the logo, please refer http://egovernments.org/html/logo/egov_logo.png.
  ~            For any further queries on attribution, including queries on brand guidelines,
  ~            please contact contact@egovernments.org
  ~
  ~         2) Any misrepresentation of the origin of the material is prohibited. It
  ~            is required that all modified versions of this material be marked in
  ~            reasonable ways as different from the original version.
  ~
  ~         3) This license does not grant any rights to any user of the program
  ~            with regards to rights under trademark law for use of the trade names
  ~            or trademarks of eGovernments Foundation.
  ~
  ~   In case of any queries, you can reach eGovernments Foundation at contact@egovernments.org.
  ~
  -->
<!DOCTYPE hibernate-mapping PUBLIC "-//Hibernate/Hibernate Mapping DTD 3.0//EN"
"http://www.hibernate.org/dtd/hibernate-mapping-3.0.dtd">
<!-- Generated Jul 19, 2007 2:57:28 PM by Hibernate Tools 3.2.0.b9 -->
<hibernate-mapping>
	<class name="org.egov.works.models.tender.TenderResponse"
		table="EGW_TENDER_RESPONSE">
		<id name="id" type="long">
			<column name="ID" />
			<generator class="org.hibernate.id.enhanced.SequenceStyleGenerator">
				<param name="sequence_name">SEQ_EGW_TENDER_RESPONSE</param> 
			</generator>
		</id>				
		<many-to-one name="tenderEstimate" column="TENDER_ESTIMATE_ID" not-null="true" fetch="select"/>	
		<property name="negotiationDate" type="date">
			<column name="NEGOTIATION_DATE" length="7" />
		</property>
		<property name="negotiationNumber" type="string">
			<column name="NEGOTIATION_NUMBER" length="256" />
		</property>			
		<property name="percQuotedRate" type="double">
            <column name="PERC_QUOTED_RATE" precision="20" not-null="true" />
        </property>
        <property name="percNegotiatedAmountRate" type="double">
            <column name="PERC_NEGOTIATED_RATE" precision="20" not-null="true" />
        </property>       
		<property name="narration" type="string">
			<column name="NARRATION" length="500" />
		</property>
		<property name="documentNumber" type="long">
            <column name="DOCUMENT_NUMBER"/>
        </property>        
        <many-to-one name="negotiationPreparedBy"
			class="org.egov.pims.model.PersonalInformation" column="PREPARED_BY"
			not-null="true" fetch="select" />
		<property name="tenderNegotiatedValue" type="double">
            <column name="TENDER_NEGOTIATED_VALUE" precision="40" />
        </property>
		<many-to-one name="egwStatus" column="STATUS_ID" /> 
        <many-to-one name="state" class="org.egov.infra.workflow.entity.State"
			cascade="all">
			<column name="STATE_ID" />
		</many-to-one>
		<property name="approvedDate" type="date">
			<column name="APPROVED_DATE" length="7" />
		</property>	
		
		<many-to-one name="createdBy" class="org.egov.infra.admin.master.entity.User" column="CREATED_BY" not-null="true" fetch="select" />
		<many-to-one name="lastModifiedBy" class="org.egov.infra.admin.master.entity.User" column="MODIFIED_BY" fetch="select"/>
		<property name="createdDate" column="CREATED_DATE" type="timestamp" not-null="true" />	
		<property name="lastModifiedDate" column="MODIFIED_DATE" type="timestamp" />	
		
		<list name="tenderResponseActivities" cascade="all,delete-orphan">
			<key column="TENDER_RESPONSE_ID" not-null="true" />
			<list-index column="tend_resp_act_index" />
			<one-to-many class="org.egov.works.models.tender.TenderResponseActivity" />
		</list>
		<list name="tenderResponseContractors" cascade="all,delete-orphan">
			<key column="TENDER_RESPONSE_ID" not-null="true" />
			<list-index column="tend_resp_cont_index" />
			<one-to-many class="org.egov.works.models.tender.TenderResponseContractors" />
		</list>		
		<set name="offlineStatuses" inverse="true" >
			<key column="OBJECT_ID" />
			<one-to-many class="org.egov.works.models.tender.OfflineStatus"  />
		</set>
		
	</class>
	<query name="MY_NONCANCELLED_NEGOTIATIONSTATEMENTS">
		<![CDATA[
     	from TenderResponse tr where tr.tenderEstimate.abstractEstimate.id = ? and tr.egwStatus.code !='CANCELLED'
    ]]>	
    </query>
     <query name="TenderNumberUniqueCheck">
     <![CDATA[
     select tenderResponse from TenderResponse  tenderResponse where tenderResponse.tenderEstimate.tenderHeader.tenderNo=? and tenderResponse.egwStatus.code != 'CANCELLED' order by tenderResponse.tenderEstimate.tenderHeader.id desc
    ]]>
    </query>
    <query name="getApprovedNegotiationContractors">
		<![CDATA[
     	select distinct(trc.contractor) from TenderResponseContractors trc where trc.tenderResponse.egwStatus.code ='APPROVED'
    ]]>	
    </query>
    <query name="getTenderFortenderId">
		<![CDATA[
     	select tr from TenderResponse tr where tr.tenderEstimate.tenderHeader.tenderNo =? and tr.egwStatus.code != 'CANCELLED'
    ]]>	
    </query>
      
    <query name="getTenderFortenderIdCanceledWO">
	<![CDATA[
		select distinct tr from TenderResponse tr where tr.negotiationNumber = ? and tr.id in (select trc.tenderResponse.id from TenderResponseContractors trc where trc.contractor.id in 
		(select wo.contractor.id from WorkOrder wo where wo.id = ? and wo.tenderNumber = ? and wo.contractor.id = ? and wo.packageNumber = ? ))
	]]>	
    </query>
    	
    <sql-query name="TenderNumberUniqueCheckForEdit">
     <![CDATA[
     select tenderResponse.id from egw_tender_response  tenderResponse,egw_tender_estimate   tenderestimate,egw_tender_header   tenderheader where tenderResponse.TENDER_ESTIMATE_ID=tenderestimate.id and 
     tenderestimate.TENDER_HEADER_ID=tenderheader.id and tenderheader.TENDER_NO=? and tenderResponse.id!=? and
     tenderResponse.status_id not in(select id from egw_status where moduletype='TenderResponse' and code='CANCELLED')
    ]]>
    </sql-query>  
    <query name="getTenderForWorksPackageNum">
		<![CDATA[
     	from TenderResponse tr where tr.tenderEstimate.worksPackage.wpNumber = ? and tr.egwStatus.code !='CANCELLED'
    ]]>	
    </query>
    <query name="getApprovedTenderForNegotiationNum">
		<![CDATA[
     	from TenderResponse tr where tr.negotiationNumber = ? and tr.egwStatus.code ='APPROVED'
    ]]>	
    </query>
</hibernate-mapping>
