#
#    eGov  SmartCity eGovernance suite aims to improve the internal efficiency,transparency,
#    accountability and the service delivery of the government  organizations.
#
#     Copyright (C) 2017  eGovernments Foundation
#
#     The updated version of eGov suite of products as by eGovernments Foundation
#     is available at http://www.egovernments.org
#
#     This program is free software: you can redistribute it and/or modify
#     it under the terms of the GNU General Public License as published by
#     the Free Software Foundation, either version 3 of the License, or
#     any later version.
#
#     This program is distributed in the hope that it will be useful,
#     but WITHOUT ANY WARRANTY; without even the implied warranty of
#     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#     GNU General Public License for more details.
#
#     You should have received a copy of the GNU General Public License
#     along with this program. If not, see http://www.gnu.org/licenses/ or
#     http://www.gnu.org/licenses/gpl.html .
#
#     In addition to the terms of the GPL license to be adhered to in using this
#     program, the following additional terms are to be complied with:
#
#         1) All versions of this program, verbatim or modified must carry this
#            Legal Notice.
#            Further, all user interfaces, including but not limited to citizen facing interfaces, 
#            Urban Local Bodies interfaces, dashboards, mobile applications, of the program and any 
#            derived works should carry eGovernments Foundation logo on the top right corner.
#
#            For the logo, please refer http://egovernments.org/html/logo/egov_logo.png.
#            For any further queries on attribution, including queries on brand guidelines, 
#            please contact contact@egovernments.org
#
#         2) Any misrepresentation of the origin of the material is prohibited. It
#            is required that all modified versions of this material be marked in
#            reasonable ways as different from the original version.
#
#         3) This license does not grant any rights to any user of the program
#            with regards to rights under trademark law for use of the trade names
#            or trademarks of eGovernments Foundation.
#
#   In case of any queries, you can reach eGovernments Foundation at contact@egovernments.org.
#
#

revenue.ptis.zonewise.overall.performance=select target.zonename,round(cast((coll.collection*100/target.targetamount) as numeric),2) coll_percage \
from (select zone.name zonename, sum(cr.target_amount_year) targetamount from egpt_collection_report cr, eg_boundary zone, eg_boundary ward \
where zone.id=cr.zoneid and ward.id=cr.wardid and cr.period=lpad(cast(extract(MONTH FROM now()) as varchar),2,'0')||'-'||extract(YEAR \
FROM now()) group by zone.name) target left outer join (select zone.name zonename, sum(mmc.collection) collection from egcl_mv_monthly_coll mmc,\
eg_boundary zone where zone.id=mmc.zoneid group by zone.name) coll on coll.zonename=target.zonename order by target.zonename

revenue.ptis.zonewise.monthly.performance=select target.zonename,round((target.targetamount/10000000),2) targetamount, \
round(cast((coll.collection/10000000) as numeric),2) collection,round(cast((coll.collection*100/target.targetamount) as numeric),2) coll_percage from \
(select zone.name zonename, sum(cr.target_amount_month) targetamount from egpt_collection_report cr, eg_boundary zone, eg_boundary ward \
where zone.id=cr.zoneid and ward.id=cr.wardid and cr.period=lpad(cast(extract(MONTH FROM now()) as varchar),2,'0')||'-'||extract(YEAR \
FROM now()) group by zone.name) target left outer join (select zone.name zonename, sum(mmc.collection) collection \
from egcl_mv_monthly_coll mmc, eg_boundary zone where zone.id=mmc.zoneid and mmc.period=lpad(cast(extract(MONTH \
FROM now()) as varchar),2,'0')||'-'||extract(YEAR FROM now()) group by zone.name) coll on coll.zonename=target.zonename order by target.zonename

revenue.ptis.wardwise.overall.performance=select target.wardname,round((target.targetamount/100000),2) targetamount, \
round(cast((coll.collection*100/target.targetamount) as numeric),2) coll_percage from (select ward.name wardname, cr.target_amount_year targetamount \
from egpt_collection_report cr, eg_boundary zone, eg_boundary ward where zone.id=cr.zoneid and ward.id=cr.wardid \
and cr.period=lpad(cast(extract(MONTH FROM now()) as varchar),2,'0')||'-'||extract(YEAR FROM now()) and zone.name=:zoneName) target left outer join \
(select ward.name wardname, sum(mmc.collection) collection from egcl_mv_monthly_coll mmc, eg_boundary zone, eg_boundary ward \
where ward.id=mmc.wardid and zone.id=mmc.zoneid and zone.name=:zoneName group by ward.name) \
coll on coll.wardname=target.wardname order by target.wardname

revenue.ptis.wardwise.monthly.performance=select target.wardname,round((target.targetamount/100000),2) targetamount, \
round(cast((coll.collection/100000) as numeric),2) collection,round(cast((coll.collection*100/target.targetamount) as numeric),2) coll_percage from \
(select ward.name wardname, cr.target_amount_month targetamount from egpt_collection_report cr, eg_boundary zone, eg_boundary ward \
where zone.id=cr.zoneid and ward.id=cr.wardid and cr.period=lpad(cast(extract(MONTH FROM now()) as varchar),2,'0')||'-'||extract(YEAR \
FROM now()) and zone.name=:zoneName) target left outer join (select ward.name wardname, mmc.collection from egcl_mv_monthly_coll mmc, \
eg_boundary zone, eg_boundary ward where ward.id=mmc.wardid and zone.id=mmc.zoneid and \
mmc.period=lpad(cast(extract(MONTH FROM now()) as varchar),2,'0')||'-'||extract(YEAR FROM now()) and zone.name=:zoneName) coll \
on coll.wardname=target.wardname order by target.wardname

revenue.ptis.collectiontrend = \
SELECT TO_CHAR(CREATEDDATE, 'MM') ||'-'|| TO_CHAR(CREATEDDATE, 'DD')  AS MONTHDAY,round(cast((sum(TOTALAMOUNT)/10000000) as numeric), 2) collection FROM EGPT_MV_COLLECTION \
WHERE CREATEDDATE BETWEEN :fromDate AND :toDate GROUP BY TO_CHAR(CREATEDDATE, 'MM'),TO_CHAR(CREATEDDATE, 'DD') \
ORDER BY TO_CHAR(CREATEDDATE, 'MM'),TO_CHAR(CREATEDDATE, 'DD') DESC

revenue.ptis.target= \
select cr.period, ROUND(sum(target_amount_month)/10000000,2) targetamount, ROUND(SUM(SUM(target_amount_month)) OVER \
(ORDER BY to_date(cr.period,'MM-yyyy') ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW)/10000000,2) AS cumulative_target \
from egpt_collection_report cr,financialyear fy where fy.startingdate<=now() and fy.endingdate>=now() and \
to_date(cr.period,'MM-yyyy')>=fy.startingdate and to_date(cr.period,'MM-yyyy')<=fy.endingdate group by cr.period \
order by to_date(cr.period,'MM-yyyy')

revenue.ptis.achieved= \
select period, ROUND(cast((sum(collection)/10000000) as numeric),2) collectedamount,ROUND(cast((SUM(SUM(collection)) OVER (ORDER BY to_date(period,'MM-yyyy') \
ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW)/10000000) as numeric),2) AS cumulative_coll FROM egcl_mv_monthly_coll \
group by period order by to_date(period,'MM-yyyy')

revenue.ptis.collecion.payment.type=select case when mftc.collectiontype = 'M' then 'Manual' when mftc.collectiontype = 'F' then 'Field' when mftc.collectiontype = 'C' then 'Office' \
when mftc.collectiontype = 'B' then 'Bank' else 'UNKNOWN' end, SUM(mfc.collection) FROM egpt_mv_finyear_tot_coll mftc,  egpt_mv_finyear_coll mfc WHERE mftc.rcptheadid=mfc.rcptheadid \
GROUP BY mftc.collectiontype

revenue.ptis.collecion.total=SELECT SUM(collection) FROM egpt_mv_finyear_coll

revenue.ptis.collecion.total.count=select COUNT(rcptheadid) from egpt_mv_finyear_coll

revenue.ptis.collecion.total.type=select case when mftc.collectiontype = 'M' then 'Manual' when mftc.collectiontype = 'F' then 'Field' when mftc.collectiontype = 'C' then 'Office' \
when mftc.collectiontype = 'O' then 'Online' when mftc.collectiontype = 'B' then 'Bank' else 'UNKNOWN' end, \
COUNT(mfc.collection) FROM egpt_mv_finyear_tot_coll mftc,  egpt_mv_finyear_coll mfc WHERE mftc.rcptheadid =mfc.rcptheadid \
GROUP BY mftc.collectiontype

revenue.ptis.coverage.efficiency=select zone.name, count(zone.name) noof_props, count(distinct coll.consumercode) noof_props_taxpaid, \
round((count(distinct coll.consumercode)/count(zone.name))*100,2) coverage_percentage from egpt_mv_propertyinfo m1, eg_boundary zone, egpt_mv_finyear_tot_coll coll \
where m1.upicno=coll.consumercode and zone.id=m1.zoneid \
group by zone.name order by zone.name

revenue.ptis.coverage.efficiency.ward=select ward.name, count(ward.name) noof_props, count(distinct coll.consumercode) noof_props_taxpaid, \
round((count(distinct coll.consumercode)/count(ward.name))*100,2) coverage_percentage from egpt_mv_propertyinfo m1, eg_boundary zone, eg_boundary ward, egpt_mv_finyear_tot_coll coll \
where m1.upicno\=coll.consumercode and ward.id\=m1.wardid and zone.id\=m1.zoneid and zone.name \=\:zoneName  group by ward.name order by ward.name

revenue.annual.performance= \
SELECT target.zonename,ROUND((target.targetamount/10000000),2) targetamount, \
ROUND(cast((coll.collection /10000000) as numeric),2) collection FROM (SELECT zone.name zonename,SUM(cr.target_amount_year) targetamount FROM \
egpt_collection_report cr,eg_boundary zone, eg_boundary ward WHERE zone.id=cr.zoneid AND ward.id=cr.wardid AND  \
cr.period=lpad(cast(extract(MONTH FROM now()) as varchar),2,'0')||'-'||extract(YEAR FROM now()) GROUP BY zone.name) target  LEFT OUTER JOIN \
(SELECT zone.name zonename, SUM(mmc.collection) collection FROM egcl_mv_monthly_coll mmc, eg_boundary zone, financialyear fy WHERE  \
zone.id=mmc.zoneid and fy.startingdate<=now() and fy.endingdate>=now() and to_date(mmc.period,'MM-yyyy')>=fy.startingdate and  \
to_date(mmc.period,'MM-yyyy')<=fy.endingdate GROUP BY zone.name) coll ON coll.zonename=target.zonename ORDER BY target.zonename 

revenue.ptis.last.achieved=SELECT period,ROUND(cast(SUM(collection)/10000000 as numeric),2) collectedamount, ROUND(cast(SUM(SUM(collection)) \
OVER (ORDER BY to_date(period,'MM-yyyy') ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW)/10000000 as numeric),2) AS cumulative_coll \
FROM egcl_mv_monthly_coll cr, financialyear fy WHERE fy.startingdate >= :finStartDate AND \
fy.endingdate <= :finEndDate AND to_date(cr.period,'MM-yyyy')>=fy.startingdate AND \
to_date(cr.period,'MM-yyyy')<=fy.endingdate GROUP BY period ORDER BY to_date(period,'MM-yyyy') 

revenue.ptis.finyear=select fy.startingdate, fy.endingdate from financialyear fy where fy.startingdate<=now() \
and fy.endingdate>=now()